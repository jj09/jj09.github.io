I"<p>Continuous Integration and Continuous delivery for Xamarin apps with VSTS and HockeyApp is awesome!</p>
<p>I blogged about <a href="http://jj09.net/continuous-integration-and-continuous-delivery-for-xamarin-ios-with-vsts/">setting up CI/CD pipeline with VSTS+HockeyApp</a> a few weeks ago.</p>
<p>If you want to add release notes to HockeyApp release you have two options:</p>
<ol>
<li>Add release notes manually, by setting 'Release Notes' property, and update them before every build (AKA - option that sucks)</li>
<li>Add path to release notes file, by setting 'Release Notes (file)' property, and update it before every git push (AKA - option that sucks less)</li>
<li>Add path to release notes file, by setting 'Release Notes (file)' property, and generate release notes from last git commit message on every build (AKA - option that rocks)</li>
</ol>
<p>Applying options 1 and 2 is easy.</p>
<p>To make option 3 happen you need to add script that will get last git commit message, and output it to the file that you specified in 'Release Notes (file)' property. This script should be executed before 'Deploy to HockeyApp' step (of course).</p>
<p>For Xamarin.iOS you need to add 'Shell Script' task that can look like this:</p>

<figure class="highlight"><pre><code class="language-shell" data-lang="shell"><span class="nb">echo</span> <span class="s2">"last commit: </span><span class="nv">$BUILD_SOURCEVERSIONMESSAGE</span><span class="s2">"</span> <span class="o">&gt;</span> commit.txt</code></pre></figure>

<p>*it will output file to the same directory where shell script is located</p>
<p>For Xamarin.Droid and Windows builds, you can create <a href="http://stackoverflow.com/questions/38199473/how-to-retrieve-git-commit-id-and-message-in-vsts-tfs-build/38200972">PowerShell script</a>.</p>
:ET